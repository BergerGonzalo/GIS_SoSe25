---
title: "Ex_1"
format: html
---

### Exercise 1

---
title: "GIS_ex1_Berger"
output: html_document
author: Gonzalo Berger
---

```{r data}
install.packages("pacman")
library(pacman)
```
```{r data}
install.packages("sf")
library(sf)
```
```{r data}
install.packages("ggplot2")
library(ggplot2)
```
```{r data}
install.packages("readr")
library(readr)
```

```{r data}
deu_0 <- st_read("data/gadm41_DEU_shp/gadm41_DEU_0.shp")

admin_0 <- ggplot()+
  geom_sf(data = deu_0)+
  theme_minimal()
print(admin_0)
```

```{r data}
deu_1 <- st_read("data/gadm41_DEU_shp/gadm41_DEU_1.shp")

admin_1 <- ggplot()+
  geom_sf(data = deu_1)+
  theme_minimal()
print(admin_1)
```

```{r data}
deu_2 <- st_read("data/gadm41_DEU_shp/gadm41_DEU_2.shp")

admin_2 <- ggplot()+
  geom_sf(data = deu_2)+
  theme_minimal()
print(admin_2)
```

```{r data}
deu_3 <- st_read("data/gadm41_DEU_shp/gadm41_DEU_3.shp")

admin_3 <- ggplot()+
  geom_sf(data = deu_3)+
  theme_minimal()
print(admin_3)
```

```{r data}
deu_4 <- st_read("data/gadm41_DEU_shp/gadm41_DEU_4.shp")

admin_4 <- ggplot()+
  geom_sf(data = deu_4)+
  theme_minimal()
print(admin_4)
```

```{r data}
names(deu_4)

Dresden <- deu_4[8760, ]

Dresden_plot <- ggplot()+
  geom_sf(data = Dresden)
print(Dresden_plot)
```

```{r data}
cemeteries <- read_delim("Friedhöfe.csv", delim = ";")
names(cemeteries)
cemeteries_sf <- st_as_sf(cemeteries, wkt = "geom")

cemeteries_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"),show.legend = "point",colour="red")+
  labs(fill="")+
  theme_minimal()

print(cemeteries_area_plot)
```

```{r data}
houses <- read_delim("data_houses/dresden.json")
houses_names <- colnames(houses)
houses <- rbind(houses_names, houses)
colnames(houses) <- c("None", "street", "lat", "house", "lon")
houses <- houses[,-1]
houses$street <- sub(",.*", "", houses$street)
houses$lat <- sub(",.*", "", houses$lat)
houses$house <- sub(",.*", "", houses$house)
houses$lon <- sub("}.*", "", houses$lon)
colSums(is.na(houses))

houses$lon[is.na(houses$lon)] <- houses$house[is.na(houses$lon)]
houses$lon <- sub("}.*", "", houses$lon)
colSums(is.na(houses))
houses <- houses[,-3]
houses <- houses[houses$lon >= 13.5 & houses$lon <= 14.0, ]

houses_sf <- st_as_sf(houses, coords = c("lon", "lat"), crs = 4326)

houses_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= houses_sf, aes(fill= "Houses"),show.legend = "point",colour="darkgrey", size = 0.0001)+
  labs(fill="")+
  theme_minimal()
print(houses_area_plot)
```

```{r data}
houses_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= houses_sf, aes(fill= "Houses"),show.legend = "point",colour="darkgrey", size = 0.0001)+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"), shape = 17, colour="red", size = 1.0)+
  labs(fill="")+
  theme_minimal()
print(houses_area_plot)
```

```{r data}
green_spaces <- read_delim("Grün- und Freiflächen.csv", delim = ";")
green_spaces_sf <- st_as_sf(green_spaces, wkt = "shape")

green_spaces_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  labs(fill="")+
  theme_minimal()

print(green_spaces_area_plot)
```

```{r data}
green_spaces <- read_delim("Grün- und Freiflächen.csv", delim = ";")
green_spaces_sf <- st_as_sf(green_spaces, wkt = "shape")

green_spaces_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= houses_sf, aes(fill= "Houses"),show.legend = "point",colour="darkgrey", size = 0.0001)+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"), shape = 17, colour="red", size = 1.0)+
  labs(fill="")+
  theme_minimal()

print(green_spaces_area_plot)
```

```{r data}
bodies_of_water <- read_delim("Elbe und stehende Gewässer.csv", delim = ";")
bodies_of_water_sf <- st_as_sf(bodies_of_water, wkt = "shape")

bodies_of_water_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  labs(fill="")+
  theme_minimal()

print(bodies_of_water_area_plot)
```

```{r data}
green_spaces <- read_delim("Grün- und Freiflächen.csv", delim = ";")
green_spaces_sf <- st_as_sf(green_spaces, wkt = "shape")

green_spaces_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  geom_sf(data= houses_sf, aes(fill= "Houses"),show.legend = "point",colour="darkgrey", size = 0.0001)+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"), shape = 17, colour="red", size = 1.0)+
  labs(fill="")+
  theme_minimal()

print(green_spaces_area_plot)
```

```{r data}
tram_lines <- read_delim("Straßenbahntrassen.csv", delim = ";")
tram_lines_sf <- st_as_sf(tram_lines, wkt = "geom")

tram_lines_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= tram_lines_sf, aes(fill= "Tram lines"),show.legend = "point",colour="black")+
  labs(fill="")+
  theme_minimal()

print(tram_lines_area_plot)
```

```{r data}
tram_lines_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  geom_sf(data= houses_sf, aes(fill= "Houses"),show.legend = "point",colour="darkgrey", size = 0.0001)+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"), shape = 17, colour="red", size = 1.0)+
   geom_sf(data= tram_lines_sf, aes(fill= "Tram lines"),colour="black", size = 2.0)+
  labs(fill="")+
  theme_minimal()

print(tram_lines_area_plot)
```

```{r data}
bus_lines <- read_delim("Buslinien.csv", delim = ";")
bus_lines_sf <- st_as_sf(bus_lines, wkt = "shape")

bus_lines_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= bus_lines_sf, aes(fill= "Bus lines"),show.legend = "point",colour="gold")+
  labs(fill="")+
  theme_minimal()

print(bus_lines_area_plot)
```

```{r data}
bus_lines <- read_delim("Buslinien.csv", delim = ";")
bus_lines_sf <- st_as_sf(bus_lines, wkt = "shape")

bus_lines_area_plot <- ggplot()+
 geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  geom_sf(data= houses_sf, fill= "darkgrey",colour="darkgrey", size = 0.0001)+
  geom_sf(data= bus_lines_sf, aes(fill = "Bus lines"), show.legend = "line", colour="gold")+
  geom_sf(data= cemeteries_sf, fill= "red", shape = 17, colour="red", size = 1.0)+
   geom_sf(data= tram_lines_sf, aes(fill= "Tram lines"),colour="black", size = 2.0)+
  labs(fill="")+
  theme_minimal()

print(bus_lines_area_plot)
```

```{r data}
bike_paths <- read_delim("Anlagen des Radverkehrs.csv", delim = ";")
bike_paths_sf <- st_as_sf(bike_paths, wkt = "geom")

bike_paths_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= bike_paths_sf, aes(fill= "Bike paths"),show.legend = "point",colour="purple")+
  labs(fill="")+
  theme_minimal()

print(bike_paths_area_plot)
```

```{r data}
bus_lines_area_plot <- ggplot()+
 geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  geom_sf(data= houses_sf, fill= "darkgrey",colour="darkgrey", size = 0.0001)+
  geom_sf(data= bike_paths_sf, aes(fill= "Bike paths"),show.legend = "line",colour="purple")+
  geom_sf(data= cemeteries_sf, fill= "red", shape = 17, colour="red", size = 1.0)+
  geom_sf(data= bus_lines_sf, fill = "gold", colour="gold")+
  geom_sf(data= tram_lines_sf, aes(fill= "Tram lines"),colour="black", size = 2.0)+
  labs(fill="")+
  theme_minimal()

print(bus_lines_area_plot)
```

```{r data}
libraries <- read_delim("Bibliotheken.csv", delim = ";")
libraries_sf <- st_as_sf(libraries, wkt = "geom")

libraries_area_plot <- ggplot()+
  geom_sf(data=Dresden, colour="grey")+
  geom_sf(data= libraries_sf, aes(fill= "Libraries"),show.legend = "point",colour="cyan")+
  labs(fill="")+
  theme_minimal()

print(libraries_area_plot)
```

```{r data}
bus_lines_area_plot <- ggplot()+
 geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, fill = "darkgreen", colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, fill = "blue",colour="blue")+
  geom_sf(data= houses_sf, fill= "darkgrey",colour="darkgrey", size = 0.0001)+
  geom_sf(data= bike_paths_sf, aes(fill= "Bike paths"),show.legend = "line",colour="purple")+
  geom_sf(data= cemeteries_sf, fill= "red", shape = 17, colour="red", size = 1.5)+
  geom_sf(data= libraries_sf, fill = "cyan",shape = 17, colour="cyan", size = 1.5)+
  geom_sf(data= bus_lines_sf, fill = "gold", colour="gold")+
  geom_sf(data= tram_lines_sf, aes(fill= "Tram lines"),colour="black", size = 2.0)+
  labs(fill="")+
  theme_minimal()

print(bus_lines_area_plot)
```

```{r data}
Dresden_area_plot <- ggplot()+
 geom_sf(data=Dresden, colour="grey")+
  geom_sf(data = green_spaces_sf, aes(fill = "Green and open spaces"), colour = "darkgreen")+
  geom_sf(data= bodies_of_water_sf, aes(fill = "Water bodies"),colour="blue")+
  geom_sf(data= houses_sf, fill= "darkgrey",colour="darkgrey", size = 0.0001)+
  geom_sf(data= bike_paths_sf, aes(fill= "Bike paths"), colour = "purple")+
  geom_sf(data= cemeteries_sf, aes(fill= "Cemeteries"), shape = 17, colour="red", size = 1.5)+
  geom_sf(data= libraries_sf, aes(fill = "Libraries"), shape = 17, colour="cyan", size = 1.5)+
  geom_sf(data= bus_lines_sf, aes(fill= "Bus lines"), colour = "gold")+
  geom_sf(data= tram_lines_sf, aes(fill = "Tram lines"), size = 2.0)+
  scale_fill_manual(
    name = "Legend",
  values = c(
    "Green and open spaces" ="darkgreen",
    "Water bodies" = "blue",
    "Bus lines" = "gold",
    "Bike paths" = "purple",
    "Cemeteries" = "red",
    "Libraries" = "cyan",
    "Tram lines" = "black"))+
  labs(fill="",
       title = "Map of Dresden")+
  theme_minimal()+
  theme(plot.title = element_text(hjust = 0.5))

print(Dresden_area_plot)
```

#References

GADM. (n.d.). Shapefile: gadm41_DEU [Database]. Retrieved May 9, 2025 from <https://gadm.org/data.html>

[OffenesDresden.de](http://offenesdresden.de) (n.d.) .Häuseradressen aus OpenStreetMap [Database]. Retrieved May 9, 2025 from <https://offenesdresden.de/>

OpenDataPortal der Landeshauptstadt Dresden. (June 19, 2024). Buslinien [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (April 9, 2024). Friedhöfe [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (April 24, 2024). Anlagen des Radverkehrs [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (April 24, 2024). Bibliotheken [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (May 23, 2024). Grün- und Freiflächen [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (May 24, 2024). Elbe und stehende Gewässer [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

OpenDataPortal der Landeshauptstadt Dresden. (January 20, 2025). Straßenbahntrassen [Database]. Retrieved from <https://opendata.dresden.de/informationsportal/#app/mainpage//Verkehrsnetz%20-%20Autobahnen,%20Stra%C3%9Fen,%20Wege,%20Br%C3%BCcken%20und%20Tunnel//>

**Appendix**

**OpenAI. (2025). *ChatGPT* (May 9 version) \[Large language model\]. [https://chat.openai.com](https://chat.openai.com)**

**Prompt:** If I have geographic data with longitude and latitude in two separate columns from a file previously loaded into R, how can I combine them?

**Output:** In **R**, if you have longitude and latitude in two separate columns and want to combine them, you can do it in a few ways depending on your goal:

---

### **🔹 1\. Combine as a String Column**

If you just want a string like `"lat, lon"` in a new column:

df$coordinates \<- paste(df$latitude, df$longitude, sep \= ", ")

---

### **🔹 2\. Combine as a Spatial Object (sf package)**

If you're working with geographic data and plan to do spatial analysis:

library(sf)

\# Assuming your dataframe is called \`df\` and columns are named \`longitude\` and \`latitude\`  
df\_sf \<- st\_as\_sf(df, coords \= c("longitude", "latitude"), crs \= 4326\)

This converts your data frame to a **simple features** (sf) object, with a geometry column.

---

### **🔹 3\. Combine as a List or Matrix**

If you just want coordinate pairs in a list:

df$coordinates \<- Map(c, df$longitude, df$latitude)

Or as a matrix (e.g., for plotting or clustering):

coords\_matrix \<- as.matrix(df\[, c("longitude", "latitude")\])

---

Would you like to visualize this data on a map or prepare it for export?